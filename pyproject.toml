[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "robotframework-JavaLibraryBase"
description = "Java support for Robot Framework"
dynamic = ["version"]
readme = { "file" = "README.md", "content-type" = "text/markdown" }
license = { text = "Apache-2.0" }
requires-python = ">=3.8"
keywords = ["Test", "Testing", "RobotFramework", "Java"]
authors = [{ name = "Daniel Biehl", email = "daniel.biehl@imbus.de" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Java",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Testing :: Acceptance",
  "Topic :: Software Development :: Testing :: BDD",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Utilities",
  "Typing :: Typed",
  "Topic :: Software Development :: Debuggers",
  "Topic :: Text Editors :: Integrated Development Environments (IDE)",
  "Intended Audience :: Developers",
  "Framework :: Robot Framework",
  "Framework :: Robot Framework :: Library",
]
dependencies = ["robotframework>=4.1.0", "JPype1>=1.4.0"]

[project.urls]
Documentation = "https://github.com/imbus/robotframework-javalibrarybase#readme"
Issues = "https://github.com/imbus/robotframework-javalibrarybase/issues"
Source = "https://github.com/imbus/robotframework-javalibrarybase"

[tool.hatch.version]
path = "src/JavaLibraryBase/__about__.py"

[tool.hatch.build]
dev-mode-dirs = ["src"]

[tool.hatch.build.targets.wheel]
only-include = ["src/JavaLibraryBase"]
sources = ["src"]

[tool.hatch.build.targets.sdist]
only-include = ["src/JavaLibraryBase"]
sources = ["src"]

[tool.black]
line-length = 120
target-version = ['py38']


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -vv -rf --ignore=bundled --ignore=.hatch"
filterwarnings = "ignore:.*Using or importing the ABCs from 'collections' instead of from 'collections.abc'.*:DeprecationWarning"
testpaths = ["tests"]
junit_suite_name = "JavaLibraryBase"
# console_output_style = "classic"
# log_cli = true
# log_cli_level = 4
# log_cli_format = "%(levelname)s %(name)s: %(message)s"
faulthandler_timeout = 30


[tool.coverage.run]
omit = ["*tests*"]
source = ["JavaLibraryBase"]


[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
]
fail_under = 40


[tool.ruff]
line-length = 120
target-version = "py38"
extend-exclude = ["bundled/libs"]
ignore = ["E741", "N805", "N999"]
select = [
  "E",
  "F",
  "W",
  "I",
  "N",
  #"UP",
  "YTT",
  #"ANN",
  #"BLE",
  #"B",
  #"A"
  #"COM"
  # "C4", # TODO enable this
  "DTZ",
  "T10",
  # "EM",
  "ISC",
  "G",
  #"INP",
  "PIE",
  # "T20",
  "PT",
  "Q",
  "RET",
  # "SIM", # TODO enable this
  # "TID",
  # "TCH",
  # "ARG",
  # "PTH", # TODO enable this
  # "SLF", #  TODO enable this
  # "ERA", # TODO enable this
  "RSE",
  # "PL",
  #"TRY",
  "RUF",
  # "TID"
]


[tool.ruff.per-file-ignores]
#"__init__.py" = ["F401"]


[tool.mypy]
python_version = "3.8"
strict = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
implicit_optional = true
disallow_untyped_decorators = false
disallow_subclassing_any = false
exclude = [
  "\\.mypy_cache",
  "\\.venv",
  "\\.hatch",
  "build",
  "dist",
  "out",
  "playground",
  "scripts",
  "bundled/libs",
]
mypy_path = [
  "typings",
  "src",
]
explicit_package_bases = true
namespace_packages = true
allow_untyped_calls = true

[[tool.mypy.overrides]]
module = [
  "robot.*",
  "jpype.*",
  "java.*",
  "de.imbus.*",
  "robotidy.*",
  "robocop.*",
  "pytest_regtest.*",
  "pluggy",
]
ignore_missing_imports = true

[tool.pyright]
exclude = ["**/.hatch", "**/__pycache__"]
typeCheckingMode = "off"
pythonVersion = "3.8"
